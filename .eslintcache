[{"C:\\Users\\dustin.auger\\github\\GarageForm\\src\\index.js":"1","C:\\Users\\dustin.auger\\github\\GarageForm\\src\\App.js":"2","C:\\Users\\dustin.auger\\github\\GarageForm\\src\\reportWebVitals.js":"3","C:\\Users\\dustin.auger\\github\\GarageForm\\src\\Garage.js":"4","C:\\Users\\dustin.auger\\github\\GarageForm\\src\\pages\\General.js":"5","C:\\Users\\dustin.auger\\github\\GarageForm\\src\\Components\\Card.js":"6","C:\\Users\\dustin.auger\\github\\GarageForm\\src\\pages\\Fence.js":"7","C:\\Users\\dustin.auger\\github\\GarageForm\\src\\Components\\UserInput.js":"8","C:\\Users\\dustin.auger\\github\\GarageForm\\src\\Components\\QuoteInfo.js":"9","C:\\Users\\dustin.auger\\github\\GarageForm\\src\\Components\\Price.js":"10","C:\\Users\\dustin.auger\\github\\GarageForm\\src\\Components\\CardContainer.js":"11","C:\\Users\\dustin.auger\\github\\GarageForm\\src\\pages\\Garage.js":"12","C:\\Users\\dustin.auger\\github\\GarageForm\\src\\Components\\QuoteSection.js":"13","C:\\Users\\dustin.auger\\github\\GarageForm\\src\\helperFunctions\\garageUtils.js":"14","C:\\Users\\dustin.auger\\github\\GarageForm\\src\\Components\\FileInput.js":"15","C:\\Users\\dustin.auger\\github\\GarageForm\\src\\pages\\Siding.js":"16","C:\\Users\\dustin.auger\\github\\GarageForm\\src\\pages\\Roofing.js":"17"},{"size":517,"mtime":1612283978584,"results":"18","hashOfConfig":"19"},{"size":2975,"mtime":1612539456134,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1612283978592,"results":"21","hashOfConfig":"19"},{"size":9202,"mtime":1612283978574,"results":"22","hashOfConfig":"19"},{"size":1055,"mtime":1612537858860,"results":"23","hashOfConfig":"19"},{"size":1385,"mtime":1612305180909,"results":"24","hashOfConfig":"19"},{"size":7527,"mtime":1612477893853,"results":"25","hashOfConfig":"19"},{"size":3046,"mtime":1612457641745,"results":"26","hashOfConfig":"19"},{"size":861,"mtime":1612380171687,"results":"27","hashOfConfig":"19"},{"size":1314,"mtime":1612388598305,"results":"28","hashOfConfig":"19"},{"size":2454,"mtime":1612378925026,"results":"29","hashOfConfig":"19"},{"size":31606,"mtime":1612477806158,"results":"30","hashOfConfig":"19"},{"size":1472,"mtime":1612378927393,"results":"31","hashOfConfig":"19"},{"size":13566,"mtime":1612304895208,"results":"32","hashOfConfig":"19"},{"size":1699,"mtime":1612537978513,"results":"33","hashOfConfig":"19"},{"size":8318,"mtime":1612538717203,"results":"34","hashOfConfig":"19"},{"size":5152,"mtime":1612539648244,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"60l572",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\dustin.auger\\github\\GarageForm\\src\\index.js",[],["73","74"],"C:\\Users\\dustin.auger\\github\\GarageForm\\src\\App.js",[],"C:\\Users\\dustin.auger\\github\\GarageForm\\src\\reportWebVitals.js",[],"C:\\Users\\dustin.auger\\github\\GarageForm\\src\\Garage.js",[],"C:\\Users\\dustin.auger\\github\\GarageForm\\src\\pages\\General.js",[],"C:\\Users\\dustin.auger\\github\\GarageForm\\src\\Components\\Card.js",[],"C:\\Users\\dustin.auger\\github\\GarageForm\\src\\pages\\Fence.js",[],"C:\\Users\\dustin.auger\\github\\GarageForm\\src\\Components\\UserInput.js",["75","76","77","78","79"],"import React from 'react'\nimport { Formik, Field, Form, ErrorMessage } from 'formik'\nimport * as Yup from 'yup'\n\nconst handleSubmit = async(body) => {\n    alert(body)\n    //PLACE CODE HERE\n}\n\nconst initialValues = {\n    customerInfo:\n        {\n            name: '',\n            email: '',\n            phoneNumber: '',\n        }\n}\n\nconst phoneRegExp = /^(1? ?\\(?)-?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(100, \"Too Long\")\n    .required('Required'),\n  email: Yup.string()\n    .email('Invalid Email')\n    .required('Required'),\n  phoneNumber: Yup.string()\n  .matches(phoneRegExp,\"Not a valid phone number\")\n  .required('Required')\n})\n\nconst getMessage = (requestType, name, email, phoneNumber, selections, files) => {\n  let body = \"\"\n  body += `${requestType} quote request\\n\\n`\n  body += `Customer Name: ${name}\\n`\n  body += `Customer Email: ${email}\\n`\n  body += `Customer Phone Number: ${phoneNumber}\\n\\n`\n\n  {selections && Object.keys(selections).map( (key, index) => {\n    body+= key === \"toggleBasic\" ? \"\" : selections[key] ? `${key.replace(\"basic\",\"\")}: ${selections[key]}\\n` : \"\"\n  })}\n\n  body += files ? \"\\nFiles:\\n\" : \"\"\n\n  {files && Object.keys(files).map(key => {\n    body+= `${files[key].name}\\n`\n  })}\n\n  return body\n}\n\nconst UserInput = props => {\n    return(\n        <Formik\n            initialValues={initialValues}\n            dirty\n            validationSchema={validationSchema}\n            onSubmit={values => handleSubmit(getMessage(props.requestType, values.name, values.email, values.phoneNumber, props.state, props.files))}\n        >\n            {({ errors, touched, dirty }) => (\n                <Form className=\"infoSection\">\n\n                    <label>Name</label>\n                    <Field\n                        name=\"name\"\n                        type=\"text\"\n                        placeholder=\"John Doe\"\n                        className=\"textInput\"\n                    />\n                    {errors.name && touched.name && <div>{errors.name}</div>}\n\n                    <label>Email</label>\n                    <Field\n                        name=\"email\"\n                        type=\"text\"\n                        placeholder=\"john@doe.com\"\n                        className=\"textInput\"\n                    />\n                    {errors.email && touched.email && <div>{errors.email}</div>}\n\n                    <label>Phone Number</label>\n                    <Field\n                        name=\"phoneNumber\"\n                        type=\"text\"\n                        placeholder=\"123-456-7890\"\n                        className=\"textInput\"\n                    />\n                    {errors.phoneNumber && touched.phoneNumber && <div>{errors.phoneNumber}</div>}\n\n                    <button type=\"submit\" disabled={!!errors.phoneNumber || !!errors.name || !!errors.email || !touched.name}>Submit</button>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default UserInput\n","C:\\Users\\dustin.auger\\github\\GarageForm\\src\\Components\\QuoteInfo.js",[],"C:\\Users\\dustin.auger\\github\\GarageForm\\src\\Components\\Price.js",["80","81","82","83","84","85"],"//Add code here to return a price\nconst getPrice = (requirements, type) => {\n    let price = \"Error\"\n    if (type === \"fence\") {\n        let [material, height, style, length] = requirements\n\n        price = [...requirements].join(\" - \") + \"ft\"\n\n    } else if (type === \"garage\") {\n        let [width, length, siding] = requirements\n\n        if (siding === \"No Siding\") {\n            //Pricing if no siding is selected\n            price = [...requirements].join(\" - \")\n        } else {\n            //Pricing if a siding is selected\n            price = [...requirements].join(\" - \")\n        }\n    }\n    return price\n}\n\nconst valid = requirements => {\n    let valid = true\n\n    for(let req of requirements){\n        if (!req){\n            valid= false;\n            break;\n        }\n    }\n\n    return valid\n}\n\nconst Price = props => <section className=\"infoSection\">\n    <h1>Price</h1>\n    {valid(props.requirements) ? <section>\n        <p>The price for your {props.type} is</p>\n        <div id=\"price\">\n            <span id=\"priceSymbol\">\n                $\n            </span>\n            <span id=\"priceValue\">\n\n                {getPrice(props.requirements, props.type)}\n            </span>\n        </div>\n    </section> :\n    <p>Please select all options to see a price</p>\n    }\n</section>\n\n\n\nexport default Price\n","C:\\Users\\dustin.auger\\github\\GarageForm\\src\\Components\\CardContainer.js",[],"C:\\Users\\dustin.auger\\github\\GarageForm\\src\\pages\\Garage.js",[],"C:\\Users\\dustin.auger\\github\\GarageForm\\src\\Components\\QuoteSection.js",[],"C:\\Users\\dustin.auger\\github\\GarageForm\\src\\helperFunctions\\garageUtils.js",[],"C:\\Users\\dustin.auger\\github\\GarageForm\\src\\Components\\FileInput.js",[],"C:\\Users\\dustin.auger\\github\\GarageForm\\src\\pages\\Siding.js",[],"C:\\Users\\dustin.auger\\github\\GarageForm\\src\\pages\\Roofing.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":2,"column":31,"nodeType":"92","messageId":"93","endLine":2,"endColumn":43},{"ruleId":"94","severity":1,"message":"95","line":41,"column":3,"nodeType":"96","messageId":"97","endLine":43,"endColumn":6},{"ruleId":"98","severity":1,"message":"99","line":41,"column":60,"nodeType":"100","messageId":"101","endLine":41,"endColumn":62},{"ruleId":"94","severity":1,"message":"95","line":47,"column":3,"nodeType":"96","messageId":"97","endLine":49,"endColumn":6},{"ruleId":"98","severity":1,"message":"99","line":47,"column":40,"nodeType":"100","messageId":"101","endLine":47,"endColumn":42},{"ruleId":"90","severity":1,"message":"102","line":5,"column":14,"nodeType":"92","messageId":"93","endLine":5,"endColumn":22},{"ruleId":"90","severity":1,"message":"103","line":5,"column":24,"nodeType":"92","messageId":"93","endLine":5,"endColumn":30},{"ruleId":"90","severity":1,"message":"104","line":5,"column":32,"nodeType":"92","messageId":"93","endLine":5,"endColumn":37},{"ruleId":"90","severity":1,"message":"105","line":5,"column":39,"nodeType":"92","messageId":"93","endLine":5,"endColumn":45},{"ruleId":"90","severity":1,"message":"106","line":10,"column":14,"nodeType":"92","messageId":"93","endLine":10,"endColumn":19},{"ruleId":"90","severity":1,"message":"105","line":10,"column":21,"nodeType":"92","messageId":"93","endLine":10,"endColumn":27},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'ErrorMessage' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'material' is assigned a value but never used.","'height' is assigned a value but never used.","'style' is assigned a value but never used.","'length' is assigned a value but never used.","'width' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]